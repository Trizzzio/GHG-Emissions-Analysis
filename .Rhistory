library(readxl)
library(treemapify)
Shinytreemap <- read_excel("Shinytreemapp.xlsx")
####Contribution Shiny App
library(scales)
library(shiny)
library(rsconnect)
library(tidyverse)
library(readxl)
library(treemapify)
Shinytreemap <- read_excel("AppContributions/Shinytreemapp.xlsx")
ui <- fluidPage(
titlePanel("GHG Emissions Contribution by Country and Continent"),
sidebarLayout(
sidebarPanel(
sliderInput(
inputId = "year",
label = "Select Year:",
min = min(Shinytreemapp$year),
max = max(Shinytreemapp$year),
value = min(Shinytreemapp$year),
step = 1,
sep = ""
)
),
mainPanel(
plotOutput("treemap", height = "600px")
)
)
)
server <- function(input, output) {
# Filter data based on the selected year
filtered_data <- reactive({
Shinytreemapp %>% filter(year == input$year)
})
# Render the treemap
output$treemap <- renderPlot({
req(filtered_data())  # Ensure data exists
ggplot(filtered_data(), aes(
area = total_emissions,
fill = Continent,
label = country,
subgroup = Continent
)) +
geom_treemap() +
geom_treemap_text(colour = "white", place = "centre", reflow = TRUE) +
geom_treemap_subgroup_border(colour = "black") +
labs(
title = paste("GHG Emissions Contribution in", input$year),
fill = "Continent"
) +
theme_minimal()
})
}
# Run the application
shinyApp(ui = ui, server = server)
####Contribution Shiny App
library(scales)
library(shiny)
library(rsconnect)
library(tidyverse)
library(readxl)
library(treemapify)
Shinytreemap <- read_excel("/Shinytreemapp.xlsx")
rsconnect::forgetDeployment("C:/Documents/RProjectslocal/GHGEmissions/AppContributions")
y
rsconnect::forgetDeployment("C:/Documents/RProjectslocal/GHGEmissions/AppContributions")
rsconnect::deployApp("C:/Documents/RProjectslocal/GHGEmissions/AppContributions/", appPrimaryDoc = "ContributionApp.R")
rsconnect::forgetDeployment("C:/Documents/RProjectslocal/GHGEmissions/AppContributions")
rsconnect::forgetDeployment("C:/Documents/RProjectslocal/GHGEmissions/AppContributions")
rsconnect::deployApp("C:/Documents/RProjectslocal/GHGEmissions/AppContributions/", appPrimaryDoc = "ContributionApp.R")
rsconnect::forgetDeployment("C:/Documents/RProjectslocal/GHGEmissions/AppContributions")
rsconnect::deployApp("C:/Documents/RProjectslocal/GHGEmissions/AppContributions/", appPrimaryDoc = "ContributionApp.R")
rsconnect::forgetDeployment("C:/Documents/RProjectslocal/GHGEmissions/AppContributions")
rsconnect::deployApp("C:/Documents/RProjectslocal/GHGEmissions/AppContributions/", appPrimaryDoc = "ContributionApp.R")
rsconnect::forgetDeployment("C:/Documents/RProjectslocal/GHGEmissions/AppContributions")
rsconnect::deployApp("C:/Documents/RProjectslocal/GHGEmissions/AppContributions/", appPrimaryDoc = "ContributionApp.R")
rsconnect::forgetDeployment("C:/Documents/RProjectslocal/GHGEmissions/AppContributions")
rsconnect::forgetDeployment("C:/Documents/RProjectslocal/GHGEmissions/AppContributions")
####Contribution Shiny App
library(scales)
library(shiny)
library(rsconnect)
library(tidyverse)
library(readxl)
library(treemapify)
Shinytreemap <- read_excel("Shinytreemapp.xlsx")
####Contribution Shiny App
library(scales)
library(shiny)
library(rsconnect)
library(tidyverse)
library(readxl)
library(treemapify)
Shinytreemap <- read_excel("Shinytreemapp.xlsx")
####Contribution Shiny App
library(scales)
library(shiny)
library(rsconnect)
library(tidyverse)
library(readxl)
library(treemapify)
Shinytreemap <- read_excel("/Shinytreemapp.xlsx")
####Contribution Shiny App
library(scales)
library(shiny)
library(rsconnect)
library(tidyverse)
library(readxl)
library(treemapify)
Shinytreemap <- read_excel("AppContributions
/Shinytreemapp.xlsx")
####Contribution Shiny App
library(scales)
library(shiny)
library(rsconnect)
library(tidyverse)
library(readxl)
library(treemapify)
Shinytreemap <- read_excel("AppContributions/Shinytreemapp.xlsx")
ui <- fluidPage(
titlePanel("GHG Emissions Contribution by Country and Continent"),
sidebarLayout(
sidebarPanel(
sliderInput(
inputId = "year",
label = "Select Year:",
min = min(Shinytreemapp$year),
max = max(Shinytreemapp$year),
value = min(Shinytreemapp$year),
step = 1,
sep = ""
)
),
mainPanel(
plotOutput("treemap", height = "600px")
)
)
)
server <- function(input, output) {
# Filter data based on the selected year
filtered_data <- reactive({
Shinytreemapp %>% filter(year == input$year)
})
# Render the treemap
output$treemap <- renderPlot({
req(filtered_data())  # Ensure data exists
ggplot(filtered_data(), aes(
area = total_emissions,
fill = Continent,
label = country,
subgroup = Continent
)) +
geom_treemap() +
geom_treemap_text(colour = "white", place = "centre", reflow = TRUE) +
geom_treemap_subgroup_border(colour = "black") +
labs(
title = paste("GHG Emissions Contribution in", input$year),
fill = "Continent"
) +
theme_minimal()
})
}
# Run the application
shinyApp(ui = ui, server = server)
getwd()
setwd("C:/Documents/RProjectslocal/GHGEmissions/AppContributions")
####Contribution Shiny App
library(scales)
library(shiny)
library(rsconnect)
library(tidyverse)
library(readxl)
library(treemapify)
Shinytreemap <- read_excel("AppContributions/Shinytreemapp.xlsx")
####Contribution Shiny App
library(scales)
library(shiny)
library(rsconnect)
library(tidyverse)
library(readxl)
library(treemapify)
Shinytreemap <- read_excel("/Shinytreemapp.xlsx")
####Contribution Shiny App
library(scales)
library(shiny)
library(rsconnect)
library(tidyverse)
library(readxl)
library(treemapify)
Shinytreemap <- read_excel("Shinytreemapp.xlsx")
ui <- fluidPage(
titlePanel("GHG Emissions Contribution by Country and Continent"),
sidebarLayout(
sidebarPanel(
sliderInput(
inputId = "year",
label = "Select Year:",
min = min(Shinytreemapp$year),
max = max(Shinytreemapp$year),
value = min(Shinytreemapp$year),
step = 1,
sep = ""
)
),
mainPanel(
plotOutput("treemap", height = "600px")
)
)
)
server <- function(input, output) {
# Filter data based on the selected year
filtered_data <- reactive({
Shinytreemapp %>% filter(year == input$year)
})
# Render the treemap
output$treemap <- renderPlot({
req(filtered_data())  # Ensure data exists
ggplot(filtered_data(), aes(
area = total_emissions,
fill = Continent,
label = country,
subgroup = Continent
)) +
geom_treemap() +
geom_treemap_text(colour = "white", place = "centre", reflow = TRUE) +
geom_treemap_subgroup_border(colour = "black") +
labs(
title = paste("GHG Emissions Contribution in", input$year),
fill = "Continent"
) +
theme_minimal()
})
}
# Run the application
shinyApp(ui = ui, server = server)
####Contribution Shiny App
library(scales)
library(shiny)
library(rsconnect)
library(tidyverse)
library(readxl)
library(treemapify)
Shinytreemap <- read_excel("Shinytreemapp.xlsx")
####Contribution Shiny App
library(scales)
library(shiny)
library(rsconnect)
library(tidyverse)
library(readxl)
library(treemapify)
Shinytreemap <- read_excel("AppContributions/Shinytreemapp.xlsx")
ui <- fluidPage(
titlePanel("GHG Emissions Contribution by Country and Continent"),
sidebarLayout(
sidebarPanel(
sliderInput(
inputId = "year",
label = "Select Year:",
min = min(Shinytreemapp$year),
max = max(Shinytreemapp$year),
value = min(Shinytreemapp$year),
step = 1,
sep = ""
)
),
mainPanel(
plotOutput("treemap", height = "600px")
)
)
)
server <- function(input, output) {
# Filter data based on the selected year
filtered_data <- reactive({
Shinytreemapp %>% filter(year == input$year)
})
# Render the treemap
output$treemap <- renderPlot({
req(filtered_data())  # Ensure data exists
ggplot(filtered_data(), aes(
area = total_emissions,
fill = Continent,
label = country,
subgroup = Continent
)) +
geom_treemap() +
geom_treemap_text(colour = "white", place = "centre", reflow = TRUE) +
geom_treemap_subgroup_border(colour = "black") +
labs(
title = paste("GHG Emissions Contribution in", input$year),
fill = "Continent"
) +
theme_minimal()
})
}
# Run the application
shinyApp(ui = ui, server = server)
getwd()
rsconnect::forgetDeployment("C:/Documents/RProjectslocal/GHGEmissions")
y
rsconnect::forgetDeployment("C:/Documents/RProjectslocal/GHGEmissions")
rsconnect::deployApp("C:/Documents/RProjectslocal/GHGEmissions/AppContributions/", appPrimaryDoc = "ContributionApp.R")
rsconnect::forgetDeployment("C:/Documents/RProjectslocal/GHGEmissions")
rsconnect::forgetDeployment("C:/Documents/RProjectslocal/GHGEmissions/AppContribution")
rsconnect::forgetDeployment("C:/Documents/RProjectslocal/GHGEmissions/AppContributions")
y
rsconnect::forgetDeployment("C:/Documents/RProjectslocal/GHGEmissions/AppContributions")
rsconnect::deployApp("C:/Documents/RProjectslocal/GHGEmissions/AppContributions/", appPrimaryDoc = "ContributionApp.R")
rsconnect::forgetDeployment("C:/Documents/RProjectslocal/GHGEmissions/AppContributions")
rsconnect::deployApp("C:/Documents/RProjectslocal/GHGEmissions/AppContributions/", appPrimaryDoc = "ContributionApp.R")
####Contribution Shiny App
library(scales)
library(shiny)
library(rsconnect)
library(tidyverse)
library(readxl)
library(treemapify)
Shinytreemapp <- read_excel("/Shinytreemapp.xlsx")
rm(Shinytreemap)
rm(Shinytreemapp)
####Contribution Shiny App
library(scales)
library(shiny)
library(rsconnect)
library(tidyverse)
library(readxl)
library(treemapify)
Shinytreemapp <- read_excel("AppContributions/Shinytreemapp.xlsx")
ui <- fluidPage(
titlePanel("GHG Emissions Contribution by Country and Continent"),
sidebarLayout(
sidebarPanel(
sliderInput(
inputId = "year",
label = "Select Year:",
min = min(Shinytreemapp$year),
max = max(Shinytreemapp$year),
value = min(Shinytreemapp$year),
step = 1,
sep = ""
)
),
mainPanel(
plotOutput("treemap", height = "600px")
)
)
)
server <- function(input, output) {
# Filter data based on the selected year
filtered_data <- reactive({
Shinytreemapp %>% filter(year == input$year)
})
# Render the treemap
output$treemap <- renderPlot({
req(filtered_data())  # Ensure data exists
ggplot(filtered_data(), aes(
area = total_emissions,
fill = Continent,
label = country,
subgroup = Continent
)) +
geom_treemap() +
geom_treemap_text(colour = "white", place = "centre", reflow = TRUE) +
geom_treemap_subgroup_border(colour = "black") +
labs(
title = paste("GHG Emissions Contribution in", input$year),
fill = "Continent"
) +
theme_minimal()
})
}
# Run the application
shinyApp(ui = ui, server = server)
getwd()
rsconnect::deployApp("C:/Documents/RProjectslocal/GHGEmissions/AppContributions/", appPrimaryDoc = "ContributionApp.R")
shiny::runApp("C:/Documents/RProjectslocal/GHGEmissions/AppContributions/")
shiny::runApp("C:/Documents/RProjectslocal/GHGEmissions/AppContributions/ContributionApp")
shiny::runApp("C:/Documents/RProjectslocal/GHGEmissions/AppContributions/ContributionApp.R")
shiny::runApp("C:/Documents/RProjectslocal/GHGEmissions/AppContributions/ContributionApp.R")
shiny::runApp("C:/Documents/RProjectslocal/GHGEmissions/AppContributions/ContributionApp.R")
install.packages("here")
shiny::runApp("C:/Documents/RProjectslocal/GHGEmissions/AppContributions/ContributionApp.R")
shiny::runApp("C:/Documents/RProjectslocal/GHGEmissions/AppContributions")
shiny::runApp("C:/Documents/RProjectslocal/GHGEmissions/AppContributions")
Shinytreemapp <- read_excel(here::here("Shinytreemapp.xlsx"))
Shinytreemapp <- read_excel(here::here("Shinytreemapp.xlsx"))
asdp <- read_excel(here::here("shinydata.xlsx"))
asdp <- read_excel(here::here("/shinydata.xlsx"))
Shinytreemapp <- read_excel("Shinytreemapp.xlsx")
getwd()
setwd()
setwd("C:/Documents/RProjectslocal/GHGEmissions/AppContributions")
Shinytreemapp <- read_excel("Shinytreemapp.xlsx")
####Contribution Shiny App
library(scales)
library(shiny)
library(rsconnect)
library(tidyverse)
library(readxl)
library(treemapify)
library(here)
Shinytreemapp <- read_excel("Shinytreemapp.xlsx")
ui <- fluidPage(
titlePanel("GHG Emissions Contribution by Country and Continent"),
sidebarLayout(
sidebarPanel(
sliderInput(
inputId = "year",
label = "Select Year:",
min = min(Shinytreemapp$year),
max = max(Shinytreemapp$year),
value = min(Shinytreemapp$year),
step = 1,
sep = ""
)
),
mainPanel(
plotOutput("treemap", height = "600px")
)
)
)
server <- function(input, output) {
# Filter data based on the selected year
filtered_data <- reactive({
Shinytreemapp %>% filter(year == input$year)
})
# Render the treemap
output$treemap <- renderPlot({
req(filtered_data())  # Ensure data exists
ggplot(filtered_data(), aes(
area = total_emissions,
fill = Continent,
label = country,
subgroup = Continent
)) +
geom_treemap() +
geom_treemap_text(colour = "white", place = "centre", reflow = TRUE) +
geom_treemap_subgroup_border(colour = "black") +
labs(
title = paste("GHG Emissions Contribution in", input$year),
fill = "Continent"
) +
theme_minimal()
})
}
# Run the application
shinyApp(ui = ui, server = server)
####Contribution Shiny App
library(scales)
library(shiny)
library(rsconnect)
library(tidyverse)
library(readxl)
library(treemapify)
library(here)
Shinytreemapp <- read_excel("/Shinytreemapp.xlsx")
####Contribution Shiny App
library(scales)
library(shiny)
library(rsconnect)
library(tidyverse)
library(readxl)
library(treemapify)
library(here)
Shinytreemapp <- read_excel("Shinytreemapp.xlsx")
ui <- fluidPage(
titlePanel("GHG Emissions Contribution by Country and Continent"),
sidebarLayout(
sidebarPanel(
sliderInput(
inputId = "year",
label = "Select Year:",
min = min(Shinytreemapp$year),
max = max(Shinytreemapp$year),
value = min(Shinytreemapp$year),
step = 1,
sep = ""
)
),
mainPanel(
plotOutput("treemap", height = "600px")
)
)
)
server <- function(input, output) {
# Filter data based on the selected year
filtered_data <- reactive({
Shinytreemapp %>% filter(year == input$year)
})
# Render the treemap
output$treemap <- renderPlot({
req(filtered_data())  # Ensure data exists
ggplot(filtered_data(), aes(
area = total_emissions,
fill = Continent,
label = country,
subgroup = Continent
)) +
geom_treemap() +
geom_treemap_text(colour = "white", place = "centre", reflow = TRUE) +
geom_treemap_subgroup_border(colour = "black") +
labs(
title = paste("GHG Emissions Contribution in", input$year),
fill = "Continent"
) +
theme_minimal()
})
}
# Run the application
shinyApp(ui = ui, server = server)
rsconnect::deployApp("C:/Documents/RProjectslocal/GHGEmissions/AppContributions/", appPrimaryDoc = "app.R")
rsconnect::deployApp("C:/Documents/RProjectslocal/GHGEmissions/AppContributions/", appPrimaryDoc = "ContributionApp.R")
